(this.webpackJsonpblog=this.webpackJsonpblog||[]).push([[0],{60:function(e,t,n){},66:function(e,t,n){},67:function(e,t,n){},68:function(e,t,n){},78:function(e,t,n){},79:function(e,t,n){},80:function(e,t,n){"use strict";n.r(t);var r=n(0),s=n.n(r),c=n(19),a=n.n(c),i=n(15),o=n(3),l=n(85),h=n(84),j=n(86),d=(n(60),n(1)),m=function(){return Object(d.jsx)(s.a.Fragment,{children:Object(d.jsx)(l.a,{id:"mainNav",collapseOnSelect:!0,expand:"lg",children:Object(d.jsxs)(h.a,{children:[Object(d.jsx)(i.b,{className:"navbar-brand",to:"/",children:"A.D.Leonel"}),Object(d.jsx)(l.a.Toggle,{className:"navbar-toggler","aria-controls":"responsive-navbar-nav"}),Object(d.jsxs)(l.a.Collapse,{id:"responsive-navbar-nav",children:[Object(d.jsx)(j.a,{className:"me-auto"}),Object(d.jsxs)(j.a,{children:[Object(d.jsx)(i.b,{className:"nav-link",to:"/",children:"Home"}),Object(d.jsx)(i.b,{className:"nav-link",to:"/posts",children:"Posts"}),Object(d.jsx)(i.b,{className:"nav-link",to:"/about",children:"About"}),Object(d.jsx)(i.b,{className:"nav-link",to:"/contact",children:"Contact"})]})]})]})})})},b=(n(66),n.p+"static/media/github.e2f07326.svg"),p=n.p+"static/media/twitter.87682341.svg",x=n.p+"static/media/youtube.c8f52198.svg",u=function(){return Object(d.jsx)(s.a.Fragment,{children:Object(d.jsx)("footer",{className:"footer-container",children:Object(d.jsx)("div",{className:"container",children:Object(d.jsx)("div",{className:"row",children:Object(d.jsxs)("div",{className:"col-lg-8 col-md-10 mx-auto",children:[Object(d.jsxs)("ul",{className:"list-inline text-center",children:[Object(d.jsx)("li",{className:"list-inline-item",children:Object(d.jsx)("a",{className:"footer-link",href:"https://github.com/addleonel",children:Object(d.jsx)("img",{className:"footer-icon",src:b,alt:"github"})})}),Object(d.jsx)("li",{className:"list-inline-item",children:Object(d.jsx)("a",{className:"footer-link",href:"https://twitter.com/addleonel",children:Object(d.jsx)("img",{className:"footer-icon",src:p,alt:"twitter"})})}),Object(d.jsx)("li",{className:"list-inline-item",children:Object(d.jsx)("a",{className:"footer-link",href:"https://www.youtube.com/channel/UCG8LbrI4Ugs0zAIEiGHTTeA",children:Object(d.jsx)("img",{className:"footer-icon",src:x,alt:"youtube"})})})]}),Object(d.jsx)("p",{className:"text-center",children:"Copyright & copy 2021"})]})})})})})},g=n(18),O=(n(67),function(e){var t=e.cover,n=e.title,r=e.content,s=e.date;return Object(d.jsxs)("section",{className:"post-preview",children:[Object(d.jsxs)(i.b,{className:"post-link",to:"/posts/full-text-search-django-postgress",children:[t&&Object(d.jsx)("img",{className:"post-cover",src:t,alt:"cover"}),Object(d.jsx)("h3",{className:"post-title",children:n}),Object(d.jsx)("p",{className:"post-subtitle",children:r})]}),Object(d.jsx)("p",{className:"post-meta",children:s})]})}),f=(n(68),function(){return Object(d.jsxs)(s.a.Fragment,{children:[Object(d.jsx)(g.a,{children:Object(d.jsx)("title",{children:"A.D.Leonel's website"})}),Object(d.jsxs)("header",{className:"masthead",children:[Object(d.jsx)("div",{className:"overlay"}),Object(d.jsx)("div",{className:"container",children:Object(d.jsx)("div",{className:"row",children:Object(d.jsx)("div",{className:"col-lg-8 col-md-10 mx-auto",children:Object(d.jsx)("div",{className:"site-heading",children:Object(d.jsxs)("blockquote",{className:"blockquote",children:[Object(d.jsx)("q",{children:"It had long since come to my attention that people of accomplishment rarely sat back and let things happen to them. They went out and happened to things."}),Object(d.jsx)("footer",{children:Object(d.jsx)("cite",{children:"- Leonardo Davinci"})})]})})})})})]}),Object(d.jsx)("main",{className:"container",children:Object(d.jsx)("div",{className:"row",children:Object(d.jsxs)("div",{className:"col-lg-8 col-md-10 mx-auto",children:[Object(d.jsx)("p",{className:"last-posts",children:"Last Publications"}),Object(d.jsx)(O,{cover:"https://images.pexels.com/photos/546819/pexels-photo-546819.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500",title:"Full-Text Search | Django | Postgres",content:"Full-text search refers to techniques for searching a single computer-stored document or a collection in a full-text database ...",date:"Published On June 5, 2021"})]})})}),Object(d.jsx)("section",{className:"container more-post",children:Object(d.jsx)("div",{className:"row",children:Object(d.jsx)("div",{className:"col-lg-8 col-md-10 mx-auto",children:Object(d.jsx)(i.b,{className:"more-post__link",to:"/posts",children:"All posts"})})})})]})}),y=function(){return Object(d.jsxs)(s.a.Fragment,{children:[Object(d.jsx)(g.a,{children:Object(d.jsx)("title",{children:"All publications"})}),Object(d.jsx)("main",{className:"container",children:Object(d.jsx)("div",{className:"row",children:Object(d.jsxs)("div",{className:"col-lg-8 col-md-10 mx-auto",children:[Object(d.jsx)("h2",{style:{marginBottom:"30px"},children:"All publications"}),Object(d.jsx)(O,{title:"Full-Text Search | Django | Postgres",content:"Full-text search refers to techniques for searching a single computer-stored document or a collection in a full-text database ...",date:"Published On June 5, 2021"})]})})})]})},w=function(){return Object(d.jsxs)(s.a.Fragment,{children:[Object(d.jsx)(g.a,{children:Object(d.jsx)("title",{children:"About me"})}),Object(d.jsx)("main",{className:"container",children:Object(d.jsx)("div",{className:"row",children:Object(d.jsxs)("div",{className:"col-lg-8 col-md-10 mx-auto",children:[Object(d.jsx)("h2",{style:{marginBottom:"30px"},children:"About me"}),Object(d.jsx)("p",{children:"I am a software developer with a passion for web development. I have a strong background in web development and have worked with many different languages and frameworks. I am currently working on a project that is a web application for a local business."})]})})})]})},N=function(){return Object(d.jsxs)(r.Fragment,{children:[Object(d.jsx)(g.a,{children:Object(d.jsx)("title",{children:"Contact me"})}),Object(d.jsx)("main",{className:"container",children:Object(d.jsx)("div",{className:"row",children:Object(d.jsx)("div",{className:"col-lg-8 col-md-10 mx-auto",children:Object(d.jsx)("h2",{style:{marginBottom:"30px"},children:"Contact me"})})})})]})},v=n(12),_=(n(78),function(){var e="python",t="tomorrowNightBright",n=!1,r=!0;return Object(d.jsxs)(s.a.Fragment,{children:[Object(d.jsx)(g.a,{children:Object(d.jsx)("title",{children:"Full-Text Search | Django | Postgres"})}),Object(d.jsx)("div",{className:"container",children:Object(d.jsx)("div",{className:"row",children:Object(d.jsx)("div",{className:"col-lg-8 col-md-10 mx-auto",children:Object(d.jsxs)("div",{className:"site-heading",children:[Object(d.jsx)("img",{className:"post-image",src:"https://images.pexels.com/photos/546819/pexels-photo-546819.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500",alt:""}),Object(d.jsx)("h2",{children:"Full-Text Search | Django | Postgres"}),Object(d.jsx)("p",{className:"post-meta-inside",children:"Posted On June 5, 2021"})]})})})}),Object(d.jsx)("main",{className:"container",children:Object(d.jsx)("div",{className:"row",children:Object(d.jsx)("div",{className:"col-lg-8 mx-auto",children:Object(d.jsxs)("section",{className:"post-content",children:[Object(d.jsx)("h3",{children:"What is Full-Text Search?"}),Object(d.jsxs)("p",{children:[" ",Object(d.jsx)("a",{className:"link-text mark-text",rel:"noreferrer",target:"_blank",href:"http://infocenter.sybase.com/help/index.jsp?topic=/com.sybase.help.sqlanywhere.12.0.1/dbusage/full-text-search-what-is-it.html",children:"Full-text search"}),"refers to techniques for searching a single computer-stored document or a collection in a full-text database. Full-text search is distinguished from searches based on metadata or on parts of the original texts represented in databases (such as titles, abstracts, selected sections, or bibliographical references)."]}),Object(d.jsx)("h3",{children:"PostgresSQL Support"}),Object(d.jsx)("p",{children:"PostgreSQL has its own full-text search implementation built-in. While not as powerful as some other search engines, it has the advantage of being inside your database and so can easily be combined with other relational queries such as categorization."}),Object(d.jsx)("p",{children:"The database functions in the django.contrib.postgres.search module ease the use of PostgreSQL\u2019s full text search engines."}),Object(d.jsx)("p",{children:"For use this tools is most easily to setup an example with a simple app into Django"}),Object(d.jsxs)("p",{children:["Read more about ",Object(d.jsx)("a",{className:"link-text mark-text",rel:"noreferrer",target:"_blank",href:"https://docs.djangoproject.com/en/3.2/ref/contrib/postgres/",children:"postgresSQL support"})]}),Object(d.jsx)("h3",{children:"Create a Model"}),Object(d.jsx)("figure",{children:Object(d.jsx)("pre",{children:Object(d.jsx)("code",{children:Object(d.jsx)(v.a,{text:"\nfrom django.db import models\n\nclass Entity(models.Model):\n\n    name = models.CharField(max_length=150)\n    email = models.EmailField(max_length=300)\n    city = models.CharField(max_length=300)\n    country = models.CharField(max_length=300)\n    url = models.URLField(max_length=400, blank=True)\n    apply = models.BooleanField(default=False)\n    description = models.TextField(blank=False)\n\n    def __str__(self):\n        return self.name\n                            ",language:e,showLineNumbers:n,theme:t,startingLineNumber:1,wrapLines:r})})})}),Object(d.jsx)("h3",{children:"Create view function-based (in this case)"}),Object(d.jsx)("p",{children:"Inside to views.py"}),Object(d.jsx)("pre",{children:Object(d.jsx)("code",{children:Object(d.jsx)(v.a,{text:"\ndef search(request):\n    pass\n                            ",language:e,showLineNumbers:n,theme:t,startingLineNumber:1,wrapLines:r})})}),Object(d.jsx)("p",{children:"For now, this is basically the begin"}),Object(d.jsx)("h3",{children:"View\u2019s URL"}),Object(d.jsx)("p",{children:"Inside to urls.py"}),Object(d.jsx)("pre",{children:Object(d.jsx)("code",{children:Object(d.jsx)(v.a,{text:"\n# django \nfrom django.urls import path\n# project \nfrom .views import search\n\nurlpatterns = [\n    path('search', search, name='search'),\n]",language:e,showLineNumbers:n,theme:t,startingLineNumber:1,wrapLines:r})})}),Object(d.jsx)("h3",{children:"Create View Template"}),Object(d.jsx)("p",{children:"Into search.html file"}),Object(d.jsx)("pre",{children:Object(d.jsx)("code",{children:Object(d.jsx)(v.a,{text:"\n{# This will be explain after #}\n{{ count_filters }}\n{% for entity in entities_filtered %}\n<p>{{ entity.name }}</p>\n<p>{{ entity.email }}</p>\n<p>{{ entity.city }}</p>\n<p>{{ entity.country }}</p>\n<p>{{ entity.url }}</p>\n<p>{{ entity.apply }}</p>\n<p>{{ entity.description}}</p>\n{% endfor %}",language:e,showLineNumbers:n,theme:t,startingLineNumber:1,wrapLines:r})})}),Object(d.jsx)("p",{children:"Now into search-form.html, we are going to create the form to actions the search view"}),Object(d.jsx)("pre",{children:Object(d.jsx)("code",{children:Object(d.jsx)(v.a,{text:'\n<form action="{% url \'search\' %}" method="GET">\n    <input name="q" type="text" placeholder="Search">\n    <button>Search</button>\n</form>',language:e,showLineNumbers:n,theme:t,startingLineNumber:1,wrapLines:r})})}),Object(d.jsx)("h3",{children:"SearchVector Implementation"}),Object(d.jsx)("p",{children:"How to use:"}),Object(d.jsx)("pre",{children:Object(d.jsx)("code",{children:Object(d.jsx)(v.a,{text:"\n>>> from django.contrib.postgres.search import SearchVector\n>>> Entry.objects.annotate(\n...     search=SearchVector('body_text', 'blog__tagline'),\n... ).filter(search='Cheese')\n[<Entry: Cheese on Toast recipes>, <Entry: Pizza Recipes>]\n                                ",language:e,showLineNumbers:n,theme:t,startingLineNumber:1,wrapLines:r})})}),Object(d.jsxs)("p",{children:["For more information about ",Object(d.jsx)("a",{className:"link-text mark-text",rel:"noreferrer",target:"_blank",href:"https://docs.djangoproject.com/en/3.2/ref/contrib/postgres/search/#searchvector",children:"SearchVector"}),"."]}),Object(d.jsx)("p",{children:"Now in our view code that we created above."}),Object(d.jsx)("pre",{children:Object(d.jsx)("code",{children:Object(d.jsx)(v.a,{text:"\nfrom django.contrib.postgree.search import SearchVector\n\ndef search(request):\n    \n    # Here we get the value of the search field from the template\n    q = request.GET.get('q', '').strip()\n\n    # Here we are going to type the principal attributes\n    # that we want to search in the search field form\n    # in this case are: name, city, country, description, \n    # and created_at\n    entity_vector = SearchVector(\n        'name', 'city', 'country', 'description', 'created_at'\n    )",language:e,showLineNumbers:n,theme:t,startingLineNumber:1,wrapLines:r})})}),Object(d.jsx)("h3",{children:"SearchQuery Implementation"}),Object(d.jsx)("p",{children:"How to use:"}),Object(d.jsx)("pre",{children:Object(d.jsx)("code",{children:Object(d.jsx)(v.a,{text:"\n>>> from django.contrib.postgres.search import SearchQuery\n>>> SearchQuery('red tomato')  # two keywords\n>>> SearchQuery('tomato red')  # same results as above\n>>> SearchQuery('red tomato', search_type='phrase')  # a phrase\n>>> SearchQuery('tomato red', search_type='phrase')  # a different phrase\n>>> SearchQuery(\"'tomato' & ('red' | 'green')\", search_type='raw')  # boolean operators\n>>> SearchQuery(\"'tomato' ('red' OR 'green')\", search_type='websearch')  # websearch operators\n                                ",language:e,showLineNumbers:n,theme:t,startingLineNumber:1,wrapLines:r})})}),Object(d.jsxs)("p",{children:["For more information about ",Object(d.jsx)("a",{className:"link-text mark-text",rel:"noreferrer",target:"_blank",href:"https://docs.djangoproject.com/en/3.2/ref/contrib/postgres/search/#searchquery",children:"SearchQuery"}),"."]}),Object(d.jsx)("p",{children:"Now in our view code that we created above"}),Object(d.jsx)("pre",{children:Object(d.jsx)("code",{children:Object(d.jsx)(v.a,{text:"\nfrom django.contrib.postgree.search import (SearchVector,\n    SearchQuery\n) \n\ndef search(request):\n    \n    # Here we get the value of the search field from the template\n    search_field_query = request.GET.get('q', '').strip()\n\n    # Here we are going to type the principal attributes\n    # that we want to search in the search field form\n    # in this case are: name, city, country, description, \n    # and created_at\n    entity_vector = SearchVector(\n        'name', 'city', 'country', 'description', 'created_at'\n    )\n    \n    # Here we just pass the value of the search field query\n    entity_query = SearchQuery(search_field_query)\n                                    ",language:e,showLineNumbers:n,theme:t,startingLineNumber:1,wrapLines:r})})}),Object(d.jsx)("h3",{children:"SearchRank Implementation"}),Object(d.jsx)("p",{children:"How to use:"}),Object(d.jsx)("pre",{children:Object(d.jsx)("code",{children:Object(d.jsx)(v.a,{text:"\n>>> from django.contrib.postgres.search import SearchQuery, SearchRank, SearchVector\n>>> vector = SearchVector('body_text')\n>>> query = SearchQuery('cheese')\n>>> Entry.objects.annotate(rank=SearchRank(vector, query)).order_by('-rank')\n[<Entry: Cheese on Toast recipes>, <Entry: Pizza recipes>]\n                                ",language:e,showLineNumbers:n,theme:t,startingLineNumber:1,wrapLines:r})})}),Object(d.jsxs)("p",{children:["For more information about ",Object(d.jsx)("a",{className:"link-text mark-text",rel:"noreferrer",target:"_blank",href:"https://docs.djangoproject.com/en/3.2/ref/contrib/postgres/search/#searchrank",children:"SearchRank"}),"."]}),Object(d.jsx)("p",{children:"Now in our view code that we created above"}),Object(d.jsx)("pre",{children:Object(d.jsx)("code",{children:Object(d.jsx)(v.a,{text:"\nfrom django.shortcuts import render\nfrom django.contrib.postgree.search import (SearchVector,\nSearchQuery\n) \nfrom .models import Entity\n\ndef search(request):\n# This is to count how many object there are (it's optional)\ncount_filters = 0\n\n# Here we get the value of the search field from the template\nsearch_field_query = request.GET.get('q', '').strip()\n\n# Here we are going to type the principal attributes\n# that we want to search in the search field form\n# in this case are: name, city, country, description, \n# and created_at\nentity_vector = SearchVector(\n    'name', 'city', 'country', 'description', 'created_at'\n)\n\n# Here we just pass the value of the search field query\nentity_query = SearchQuery(search_field_query)\n\n# Here we pass the entity_vector and entity_query\nentities_filtered = Entity.objects.annotate(\n    rank=SearchRank(entity_vector, entity_query)\n).order_by('-rank')\n\n# count filters\ncount_filters += entities_filtered.count()\n\n# Now We are going to create the context dictionary\ncontext = {\n    'entities_filtered': entities_filtered,\n    'count_filters': count_filters,\n}\n\n# Now we are going to complete with our view \nreturn render(request, 'search/search.html', context)",language:e,showLineNumbers:n,theme:t,startingLineNumber:1,wrapLines:r})})}),Object(d.jsx)("h3",{children:"Search View Class-Based"}),Object(d.jsx)("p",{children:"The same search view, now with class:"}),Object(d.jsx)("pre",{children:Object(d.jsx)("code",{children:Object(d.jsx)(v.a,{text:"\nfrom django.shortcuts import render\nfrom django.views import View\nfrom django.contrib.postgree.search import (SearchVector,\n    SearchQuery\n) \nfrom .models import Entity\n\nclass SearchEntityView(View):\n    template_name = 'search/search.html'\n    \n    def get(self, request, *args, **kwargs):\n        count_filters = 0\n\n        search_field_query = request.GET.get('q', '').strip()\n\n        entity_vector = SearchVector(\n            'name', 'city', 'country', 'description', 'created_at'\n        )\n\n        entity_query = SearchQuery(search_field_query)\n    \n        entities_filtered = Entity.objects.annotate(\n            rank=SearchRank(entity_vector, entity_query)\n        ).order_by('-rank')\n\n        count_filters += entities_filtered.count()\n\n        context = {\n            'entities_filtered': entities_filtered,\n            'count_filters': count_filters,\n        }\n\n        return render(request, self.template_name, context)",language:e,showLineNumbers:n,theme:t,startingLineNumber:1,wrapLines:r})})}),Object(d.jsx)("p",{children:"Then change the url.py path:"}),Object(d.jsx)("pre",{children:Object(d.jsx)("code",{children:Object(d.jsx)(v.a,{text:"\n# django \nfrom django.urls import path\n# project \nfrom .views import SearchEntityView\n\nurlpatterns = [\n    path('search', SearchEntityView.as_view(), name='search'),\n]",language:e,showLineNumbers:n,theme:t,startingLineNumber:1,wrapLines:r})})}),Object(d.jsxs)("p",{children:["If you want to read yourself from the ",Object(d.jsx)("a",{className:"link-text mark-text",rel:"noreferrer",target:"_blank",href:"https://docs.djangoproject.com/en/3.2/ref/contrib/postgres/search/#full-text-search",children:"Django docs"})," just do it."]})]})})})})]})}),S=(n(79),function(){return Object(d.jsx)(r.Fragment,{children:Object(d.jsxs)(i.a,{children:[Object(d.jsx)(m,{}),Object(d.jsx)("div",{className:"wrap",children:Object(d.jsx)("div",{className:"main",children:Object(d.jsxs)(o.c,{children:[Object(d.jsx)(o.a,{exact:!0,path:"/",element:Object(d.jsx)(f,{})}),Object(d.jsx)(o.a,{path:"/about",element:Object(d.jsx)(w,{})}),Object(d.jsx)(o.a,{path:"/Posts",element:Object(d.jsx)(y,{})}),Object(d.jsx)(o.a,{path:"/contact",element:Object(d.jsx)(N,{})}),Object(d.jsx)(o.a,{path:"/posts/full-text-search-django-postgress",element:Object(d.jsx)(_,{})})]})})}),Object(d.jsx)("div",{className:"footer",children:Object(d.jsx)(u,{})})]})})}),k=function(e){e&&e instanceof Function&&n.e(155).then(n.bind(null,271)).then((function(t){var n=t.getCLS,r=t.getFID,s=t.getFCP,c=t.getLCP,a=t.getTTFB;n(e),r(e),s(e),c(e),a(e)}))};a.a.render(Object(d.jsx)(s.a.StrictMode,{children:Object(d.jsx)(S,{})}),document.getElementById("root")),k()}},[[80,152,153]]]);
//# sourceMappingURL=main.5c554391.chunk.js.map